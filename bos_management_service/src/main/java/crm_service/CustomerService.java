
package crm_service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "CustomerService", targetNamespace = "http://service/")
@XmlSeeAlso({
})
public interface CustomerService {


    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findHasAssociation", targetNamespace = "http://service/", className = "service.FindHasAssociation")
    @ResponseWrapper(localName = "findHasAssociationResponse", targetNamespace = "http://service/", className = "service.FindHasAssociationResponse")
    public List<Customer> findHasAssociation(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "save", targetNamespace = "http://service/", className = "service.Save")
    @ResponseWrapper(localName = "saveResponse", targetNamespace = "http://service/", className = "service.SaveResponse")
    public void save(
            @WebParam(name = "arg0", targetNamespace = "")
            Customer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByAddress", targetNamespace = "http://service/", className = "service.FindByAddress")
    @ResponseWrapper(localName = "findByAddressResponse", targetNamespace = "http://service/", className = "service.FindByAddressResponse")
    public String findByAddress(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "helloworld", targetNamespace = "http://service/", className = "service.Helloworld")
    @ResponseWrapper(localName = "helloworldResponse", targetNamespace = "http://service/", className = "service.HelloworldResponse")
    public void helloworld();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "associationFixedAreaId2Customer", targetNamespace = "http://service/", className = "service.AssociationFixedAreaId2Customer")
    @ResponseWrapper(localName = "associationFixedAreaId2CustomerResponse", targetNamespace = "http://service/", className = "service.AssociationFixedAreaId2CustomerResponse")
    public void associationFixedAreaId2Customer(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
            List<Integer> arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://service/", className = "service.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://service/", className = "service.LoginResponse")
    public Customer login(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0,
            @WebParam(name = "arg1", targetNamespace = "")
            String arg1);

    /**
     * 
     * @param arg0
     * @return
     *     returns service.Customer
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByTelephone", targetNamespace = "http://service/", className = "service.FindByTelephone")
    @ResponseWrapper(localName = "findByTelephoneResponse", targetNamespace = "http://service/", className = "service.FindByTelephoneResponse")
    public Customer findByTelephone(
            @WebParam(name = "arg0", targetNamespace = "")
            String arg0);

    /**
     * 
     * @return
     *     returns java.util.List<service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findNotAssociation", targetNamespace = "http://service/", className = "service.FindNotAssociation")
    @ResponseWrapper(localName = "findNotAssociationResponse", targetNamespace = "http://service/", className = "service.FindNotAssociationResponse")
    public List<Customer> findNotAssociation();

    /**
     * 
     * @return
     *     returns java.util.List<service.Customer>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://service/", className = "service.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://service/", className = "service.FindAllResponse")
    public List<Customer> findAll();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "setType2One", targetNamespace = "http://service/", className = "service.SetType2One")
    @ResponseWrapper(localName = "setType2OneResponse", targetNamespace = "http://service/", className = "service.SetType2OneResponse")
    public void setType2One(
            @WebParam(name = "arg0", targetNamespace = "")
            Integer arg0);

}
